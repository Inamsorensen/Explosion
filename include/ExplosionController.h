#ifndef EXPLOSIONCONTROLLER
#define EXPLOSIONCONTROLLER

#include "Emitter.h"
#include "Grid.h"

class ExplosionController
{
public:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Get explosion controller instance
  //----------------------------------------------------------------------------------------------------------------------
  static ExplosionController* instance();

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Update explosion
  //----------------------------------------------------------------------------------------------------------------------
  void update();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Render explosion
  //----------------------------------------------------------------------------------------------------------------------
  void render(ngl::Mat4 _ModelMatrix_Camera);

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Set rendering variables
  //----------------------------------------------------------------------------------------------------------------------
  void setRenderVariables(ngl::Camera* _camera, std::string _shaderName);

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Get grid size and position to enable drawing of bounding box
  //----------------------------------------------------------------------------------------------------------------------
  inline ngl::Vec3 getGridPosition(){return m_gridPosition;}
  inline float getGridSize(){return m_gridSize;}


private:
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Explosion controller constructor
  //----------------------------------------------------------------------------------------------------------------------
  ExplosionController();
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Explosion controller instance pointer
  //----------------------------------------------------------------------------------------------------------------------
  static ExplosionController* m_instance;

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Pointer to emitter
  //----------------------------------------------------------------------------------------------------------------------
  Emitter* m_emitter;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Pointer to grid
  //----------------------------------------------------------------------------------------------------------------------
  Grid* m_grid;

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Pointer to camera
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Camera* m_camera;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Shader name
  //----------------------------------------------------------------------------------------------------------------------
  std::string m_shaderName;

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Timer setup for simulation
  //----------------------------------------------------------------------------------------------------------------------
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Time step of simulation
  //----------------------------------------------------------------------------------------------------------------------
  float m_simTimeStep;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Total elapsed time of simulation
  //----------------------------------------------------------------------------------------------------------------------
  float m_simElapsedTime;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Number of frames in simulation
  //----------------------------------------------------------------------------------------------------------------------
  int m_noFrames;

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Grid-fluid parameters
  //----------------------------------------------------------------------------------------------------------------------
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Grid position
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 m_gridPosition;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Grid/bounding box size (set as cube so equal size in all directions)
  //----------------------------------------------------------------------------------------------------------------------
  float m_gridSize;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Number of cells along one of the lengths of the grid (same for the other two). Total number of cells is m_noCell^3
  //----------------------------------------------------------------------------------------------------------------------
  int m_noCells;

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Noise constant
  //----------------------------------------------------------------------------------------------------------------------
  float m_noiseConstant;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Vorticity constant
  //----------------------------------------------------------------------------------------------------------------------
  float m_vorticityConstant;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Cooling constant. Heat given off to the environment
  //----------------------------------------------------------------------------------------------------------------------
  float m_coolingConstant;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Buoyancy constant. The amount of effect of temperature on fluid velocity
  //----------------------------------------------------------------------------------------------------------------------
  float m_buoyancyConstant;

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Ambient temperature. Set to 20C=293K, ie. in Kelvin
  //----------------------------------------------------------------------------------------------------------------------
  float m_ambientTemp;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Thermal conductivity. Should give how much diffusion of temperature from/through the fluid
  //----------------------------------------------------------------------------------------------------------------------
  float m_thermalConductivity;


  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Explosion parameters
  //----------------------------------------------------------------------------------------------------------------------
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Explosion temperature in Kelvin
  //----------------------------------------------------------------------------------------------------------------------
  float m_explosionTemperature;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Explosion divergence contribution
  //----------------------------------------------------------------------------------------------------------------------
  float m_explosionDivergence;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Explosion origin
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 m_explosionOrigin;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Radius of exploding sphere
  //----------------------------------------------------------------------------------------------------------------------
  float m_explosionRadius;

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Emitter parameters
  //----------------------------------------------------------------------------------------------------------------------
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Position of emitter
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 m_emitterPosition;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Emitter radius
  //----------------------------------------------------------------------------------------------------------------------
  float m_emitterRadius;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Total number of particles
  //----------------------------------------------------------------------------------------------------------------------
  int m_noParticles;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Number of particles emitted per time step
  //----------------------------------------------------------------------------------------------------------------------
  int m_emissionRate;

  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Particle parameters
  //----------------------------------------------------------------------------------------------------------------------
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Particle mass
  //----------------------------------------------------------------------------------------------------------------------
  float m_particleMass;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Particle radius
  //----------------------------------------------------------------------------------------------------------------------
  float m_particleRadius;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Initial particle velocity
  //----------------------------------------------------------------------------------------------------------------------
  ngl::Vec3 m_particleInitVelocity;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Particle life time average
  //----------------------------------------------------------------------------------------------------------------------
  float m_particleLifeTime;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Particle drag constant
  //----------------------------------------------------------------------------------------------------------------------
  float m_particleDragConstant;
  //----------------------------------------------------------------------------------------------------------------------
  /// @brief Initial particle temperature
  //----------------------------------------------------------------------------------------------------------------------
  float m_particleInitTemperature;

};

#endif // EXPLOSIONCONTROLLER

